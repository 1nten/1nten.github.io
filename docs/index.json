[{"content":"运行环境 win10\nversion 0. 9. 98 (beta)★website★@typora\npicgo-2.2.2\n1.去官网下载最新的typora和picgo，并安装 2.配置typora 2.配置picgo 修改端口\n安装插件\n配置Chevereto\n注意仔细核对url\n\u0026#34;url\u0026#34;: \u0026#34;http://个人服务器Cheverto图床域名或地址/api/1/upload\u0026#34; 记得打开时间戳重命名，Chevereto不允许上传同名图片，不然会出现以下错误。\n我测试时\npicgo的时间戳不会重命名typora的验证图片时的测试图片，所以会出现第一次验证成功，之后失败的情况。\n实际功能正常。\n踩坑与调试 1.为什么原来的URL不行\n可以说得按照官方文档来，乱填url当然不行，感觉这样的回答太牵强。\n我推测是图像界面面向用户上传图片的调用方法 和 为PicGo这类用于快速上传图片并获取图片 URL 链接的工具的接口不一样。后者至少比前者多一个获取图片 URL 链接的返回数据。如果用前者的url那typora就收不到图片的链接，功能会无法实现\n2.为什么现在这个URL可以\n按照chevereto官方文档的说明（https://v3-docs.chevereto.com/API/V1.html#api-call）\n我们最好采用“POST”的形式来传数据。默认的上传url为： http://mysite.com/api/1/upload\n为什么锁定是url的问题？\n假设Typora + PicGo+ Chevereto这三个软件及插件都没问题，key也没问题。\nPicGo的本质还是收发数据包吧，我没有去看源码，但感觉和web端的通信是通过给url传不同的参数来实现。\n要么传的参数有问题，要么url有问题，逐个排查也可。参数大概是软件设置的选项，然后我也一直在调，常见的问题都搜过了，小概率是问题太偏。但url真的很可疑呀，我填的时候没有想太多，就理所当然地复制了。连文档都没查，参考的博客看得也不仔细。\n","permalink":"https://inten.kro1lsec.com/post/typora-+-picgo+-chevereto/","summary":"运行环境 win10\nversion 0. 9. 98 (beta)★website★@typora\npicgo-2.2.2\n1.去官网下载最新的typora和picgo，并安装 2.配置typora 2.配置picgo 修改端口\n安装插件\n配置Chevereto\n注意仔细核对url\n\u0026#34;url\u0026#34;: \u0026#34;http://个人服务器Cheverto图床域名或地址/api/1/upload\u0026#34; 记得打开时间戳重命名，Chevereto不允许上传同名图片，不然会出现以下错误。\n我测试时\npicgo的时间戳不会重命名typora的验证图片时的测试图片，所以会出现第一次验证成功，之后失败的情况。\n实际功能正常。\n踩坑与调试 1.为什么原来的URL不行\n可以说得按照官方文档来，乱填url当然不行，感觉这样的回答太牵强。\n我推测是图像界面面向用户上传图片的调用方法 和 为PicGo这类用于快速上传图片并获取图片 URL 链接的工具的接口不一样。后者至少比前者多一个获取图片 URL 链接的返回数据。如果用前者的url那typora就收不到图片的链接，功能会无法实现\n2.为什么现在这个URL可以\n按照chevereto官方文档的说明（https://v3-docs.chevereto.com/API/V1.html#api-call）\n我们最好采用“POST”的形式来传数据。默认的上传url为： http://mysite.com/api/1/upload\n为什么锁定是url的问题？\n假设Typora + PicGo+ Chevereto这三个软件及插件都没问题，key也没问题。\nPicGo的本质还是收发数据包吧，我没有去看源码，但感觉和web端的通信是通过给url传不同的参数来实现。\n要么传的参数有问题，要么url有问题，逐个排查也可。参数大概是软件设置的选项，然后我也一直在调，常见的问题都搜过了，小概率是问题太偏。但url真的很可疑呀，我填的时候没有想太多，就理所当然地复制了。连文档都没查，参考的博客看得也不仔细。","title":"Typora + PicGo+ Chevereto踩坑指南"},{"content":"Git基本操作 初次使用需要配置好邮箱用户名，ssh或token\nhttps://docs.github.com/cn/github/getting-started-with-github/quickstart\n大致流程 1.链接\n2.增删改查\n3.提交更改\n4.提交分支\necho \u0026#34;# KroCTF\u0026#34; \u0026gt;\u0026gt; README.md git init git add README.md git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/1nten/KroCTF.git git push -u origin main 配置 $ git config --global user.email \u0026#34;email@example.com\u0026#34; $ git config --global user.name \u0026#34;Mona Lisa\u0026#34; $ git config --global user.name $ git config --global user.email 基础信息 //显示工作目录和暂存区的状态 $ git status //显示日志（项目历史的信息） $ git log //将分支new1同步到云端GitHub $ git push origin new1 //克隆 $ git clone https://github.com/1nten/codeql.git //初始化 $ git init 链接 //创建链接origin $ git remote add origin https://github.com/1nten/test1.git //删除链接origin $ git remote rm origin 分支 //创建分支new1 $ git branch new1 //切换分支new1 $ git checkout new1 //删除本地分支new1 $ git branch --delete new1 //删除远程分支new1 $ git push origin --delete new1 //合并分支 61445@Social MINGW64 ~/Desktop/github (new1) $ git checkout main Switched to branch \u0026#39;main\u0026#39; 61445@Social MINGW64 ~/Desktop/github (main) $ git merge new1 Updating 94b56ea..ee28bef Fast-forward test.md | 1 + test.txt | 1 - 2 files changed, 1 insertion(+), 1 deletion(-) create mode 100644 test.md delete mode 100644 test.txt 文件 //创建文件test.md $ echo \u0026#34;## hello git\u0026#34; \u0026gt;\u0026gt; test.md //添加文件test.md $ git add test.md //提交更改文件test.md $ git commit -m \u0026#34;这是个测试文件\u0026#34; test.md //将分支new1同步到云端GitHub $ git push origin new1 //删除文件test.txt $ git rm test.txt //提交更改文件test.txt $ git commit -m \u0026#34;这是个测试文件\u0026#34; test.txt //将分支new1同步到云端GitHub $ git push origin new1 调试信息 参考链接 https://zhuanlan.zhihu.com/p/88246764\nhttps://docs.github.com/cn/github/getting-started-with-github/quickstart\nhttps://training.github.com/downloads/zh_CN/github-git-cheat-sheet/\n","permalink":"https://inten.kro1lsec.com/post/githubup/","summary":"Git基本操作 初次使用需要配置好邮箱用户名，ssh或token\nhttps://docs.github.com/cn/github/getting-started-with-github/quickstart\n大致流程 1.链接\n2.增删改查\n3.提交更改\n4.提交分支\necho \u0026#34;# KroCTF\u0026#34; \u0026gt;\u0026gt; README.md git init git add README.md git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/1nten/KroCTF.git git push -u origin main 配置 $ git config --global user.email \u0026#34;email@example.com\u0026#34; $ git config --global user.name \u0026#34;Mona Lisa\u0026#34; $ git config --global user.name $ git config --global user.email 基础信息 //显示工作目录和暂存区的状态 $ git status //显示日志（项目历史的信息） $ git log //将分支new1同步到云端GitHub $ git push origin new1 //克隆 $ git clone https://github.","title":"Github初入"}]