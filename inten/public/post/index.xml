<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on inten</title>
    <link>http://example.org/post/</link>
    <description>Recent content in Posts on inten</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Apr 2021 15:07:34 +0800</lastBuildDate><atom:link href="http://example.org/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Typora &#43; PicGo&#43; Chevereto踩坑指南</title>
      <link>http://example.org/post/typora-&#43;-picgo&#43;-chevereto/</link>
      <pubDate>Tue, 13 Apr 2021 15:07:34 +0800</pubDate>
      
      <guid>http://example.org/post/typora-&#43;-picgo&#43;-chevereto/</guid>
      <description>运行环境 win10
version 0. 9. 98 (beta)★website★@typora
picgo-2.2.2
1.去官网下载最新的typora和picgo，并安装 2.配置typora 2.配置picgo 修改端口
安装插件
配置Chevereto
注意仔细核对url
&amp;#34;url&amp;#34;: &amp;#34;http://个人服务器Cheverto图床域名或地址/api/1/upload&amp;#34; 记得打开时间戳重命名，Chevereto不允许上传同名图片，不然会出现以下错误。
我测试时
picgo的时间戳不会重命名typora的验证图片时的测试图片，所以会出现第一次验证成功，之后失败的情况。
实际功能正常。
踩坑与调试 1.为什么原来的URL不行
可以说得按照官方文档来，乱填url当然不行，感觉这样的回答太牵强。
我推测是图像界面面向用户上传图片的调用方法 和 为PicGo这类用于快速上传图片并获取图片 URL 链接的工具的接口不一样。后者至少比前者多一个获取图片 URL 链接的返回数据。如果用前者的url那typora就收不到图片的链接，功能会无法实现
2.为什么现在这个URL可以
按照chevereto官方文档的说明（https://v3-docs.chevereto.com/API/V1.html#api-call）
我们最好采用“POST”的形式来传数据。默认的上传url为： http://mysite.com/api/1/upload
为什么锁定是url的问题？
假设Typora + PicGo+ Chevereto这三个软件及插件都没问题，key也没问题。
PicGo的本质还是收发数据包吧，我没有去看源码，但感觉和web端的通信是通过给url传不同的参数来实现。
要么传的参数有问题，要么url有问题，逐个排查也可。参数大概是软件设置的选项，然后我也一直在调，常见的问题都搜过了，小概率是问题太偏。但url真的很可疑呀，我填的时候没有想太多，就理所当然地复制了。连文档都没查，参考的博客看得也不仔细。</description>
    </item>
    
    <item>
      <title>Github初入</title>
      <link>http://example.org/post/githubup/</link>
      <pubDate>Sat, 10 Apr 2021 15:07:34 +0800</pubDate>
      
      <guid>http://example.org/post/githubup/</guid>
      <description>Git基本操作 初次使用需要配置好邮箱用户名，ssh或token
https://docs.github.com/cn/github/getting-started-with-github/quickstart
大致流程 1.链接
2.增删改查
3.提交更改
4.提交分支
echo &amp;#34;# KroCTF&amp;#34; &amp;gt;&amp;gt; README.md git init git add README.md git commit -m &amp;#34;first commit&amp;#34; git branch -M main git remote add origin https://github.com/1nten/KroCTF.git git push -u origin main 配置 $ git config --global user.email &amp;#34;email@example.com&amp;#34; $ git config --global user.name &amp;#34;Mona Lisa&amp;#34; $ git config --global user.name $ git config --global user.email 基础信息 //显示工作目录和暂存区的状态 $ git status //显示日志（项目历史的信息） $ git log //将分支new1同步到云端GitHub $ git push origin new1 //克隆 $ git clone https://github.</description>
    </item>
    
  </channel>
</rss>
